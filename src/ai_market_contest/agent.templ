from ai_market_contest.agent import Agent
class ${agent_classname}(Agent):
    """
    Agent interface - an agent represents a firm selling a product in the market.

    An agent encapsulates the users private pricing strategy.

    The user is free to implement this interface in order to test strategies.
    As is standard for ML models, it uses the policy-update format.
    For those not familiar with policy-update, see the comments on each function.
    """

    def policy(
        self, last_round_agents_prices: list[float], identity_index: int
    ) -> float:
        """
        Query the agent for the next price to set.

        Parameters
        ----------
        last_round_all_agents_prices : list of float
            List of all the prices set by all agents in the previous timestep.
        identity_index: int
            A positive integer that tells the agent which index in the list
            corresponds to themself.

        Returns
        -------
        float
            Price of the product set by the agent at the current timestep,
            discretised within [0,1].

        """

        raise NotImplementedError

    def learning_has_converged(self):
        """
        Check if the agent's learning has converged.

        Returns
        -------
        bool : True if the agent learning has converged, False otherwise.

        """
        raise NotImplementedError

    def update(
        self,
        last_round_prices: list[float],
        last_round_sales: int,
        round_before_last_prices: list[float],
        round_before_last_sales: int,
        identity_index: int,
    ) -> None:
        """
        Feeds data from the previous timestep into the agent allowing it
        to adjust it's strategy.

        Parameters
        ----------
        last_round_prices : list of float
            List of all the prices set by all agents in the previous timestep.
        last_round_sales: int
            A positive integer representing the number of sales the agent
            made in the previous timestep.
        round_before_last_prices : list of float
            List of all the prices set by all agents in the timestep before last.
        round_before_last_sales: int
            A positive integer representing the number of sales the agent
            made in the timestep before last.
        identity_index: int
            A positive integer that holds the index in the list corresponding to
            the current agent.

        """
        raise NotImplementedError