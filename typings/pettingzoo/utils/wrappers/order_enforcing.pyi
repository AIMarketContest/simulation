"""
This type stub file was generated by pyright.
"""

from ..env import AECIterable, AECIterator
from .base import BaseWrapper

class OrderEnforcingWrapper(BaseWrapper):
    """
    check all call orders:

    * error on getting rewards, dones, infos, agent_selection before reset
    * error on calling step, observe before reset
    * error on iterating without stepping or resetting environment.
    * warn on calling close before render or reset
    * warn on calling step after environment is done
    """

    def __init__(self, env) -> None: ...
    def __getattr__(self, value):
        """
        raises an error message when data is gotten from the env
        which should only be gotten after reset
        """
        ...
    def seed(self, seed=...): ...
    def render(self, mode=...): ...
    def step(self, action): ...
    def observe(self, agent): ...
    def state(self): ...
    def agent_iter(self, max_iter=...): ...
    def reset(self): ...
    def __str__(self) -> str: ...

class AECOrderEnforcingIterable(AECIterable):
    def __iter__(self): ...

class AECOrderEnforcingIterator(AECIterator):
    def __next__(self): ...
