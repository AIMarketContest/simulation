"""
This type stub file was generated by pyright.
"""

class Closer:
    """A registry that ensures your objects get closed, whether manually,
    upon garbage collection, or upon exit. To work properly, your
    objects need to cooperate and do something like the following:

    ```
    closer = Closer()
    class Example(object):
        def __init__(self):
            self._id = closer.register(self)

        def close(self):
            # Probably worth making idempotent too!
            ...
            closer.unregister(self._id)

        def __del__(self):
            self.close()
    ```

    That is, your objects should:

    - register() themselves and save the returned ID
    - unregister() themselves upon close()
    - include a __del__ method which close()'s the object
    """
    def __init__(self, atexit_register=...) -> None:
        ...
    
    def generate_next_id(self): # -> int:
        ...
    
    def register(self, closeable): # -> int:
        """Registers an object with a 'close' method.

        Returns:
            int: The registration ID of this object. It is the caller's responsibility to save this ID if early closing is desired.
        """
        ...
    
    def unregister(self, id): # -> None:
        ...
    
    def close(self): # -> None:
        ...
    


